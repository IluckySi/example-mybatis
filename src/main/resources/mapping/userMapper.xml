<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t2t.examples.dao.UserMapper">


    <!--1. if就是简单的条件判断，利用if语句我们可以实现某些简单的条件选择。-->
    <select id="dynamicIfTest" parameterType="com.t2t.examples.model.User" resultType="com.t2t.examples.model.User">
        select * from USERS where 1 = 1
        <if test="name != null">
            and name = #{name}
        </if>
        <if test="sex != null">
            and sex = #{sex}
        </if>
        <if test="age!= 0">
            and age = #{age}
        </if>
    </select>
    <!--2. choose元素的作用就相当于JAVA中的switch语句，基本上跟JSTL中的choose的作用和用法是一样的，通常都是与when和otherwise搭配的。-->
    <select id="dynamicChooseTest" parameterType="com.t2t.examples.model.User" resultType="com.t2t.examples.model.User">
        select * from USERS where 1 = 1
        <choose>
            <when test="name != null">
                 name = #{name}
            </when>
            <when test="sex != null">
                and sex = #{sex}
            </when>
            <otherwise>
                and age > 0
            </otherwise>
        </choose>
    </select>
    <!--3. where语句的作用主要是简化SQL语句中where中的条件判断的。-->
    <select id="dynamicWhereTest" parameterType="com.t2t.examples.model.User" resultType="com.t2t.examples.model.User">
        select * from USERS
        <where>
            <if test="name != null">
                name = #{name}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="age!= 0">
                and age = #{age}
            </if>
        </where>
    </select>
    <!--4. trim元素的主要功能是可以在自己包含的内容前加上某些前缀，也可以在其后加上某些后缀，与之对应的属性是prefix和suffix；-->
    <select id="dynamicTrimTest" parameterType="com.t2t.examples.model.User" resultType="com.t2t.examples.model.User">
        select * from USERS
        <trim prefix="where" prefixOverrides="and | or">
            <if test="name != null">
                name = #{name}
            </if>
            <if test="sex != null">
                or sex = #{sex}
            </if>
            <if test="age!= 0">
                and age = #{age}
            </if>
        </trim>
    </select>
    <!-- 5.1 set元素主要是用在更新操作的时候，它的主要功能和where元素其实是差不多的。-->
    <update id="dynamicSetTest1" parameterType="com.t2t.examples.model.User">
        update USERS
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                or sex = #{sex},
            </if>
            <if test="age!= 0">
                and age = #{age},
            </if>
        </set>
        where id = #{id}
    </update>
    <!--5.2 同上 -->
    <update id="dynamicSetTest2" parameterType="com.t2t.examples.model.User">
        update USERS
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                or sex = #{sex},
            </if>
            <if test="age!= 0">
                and age = #{age},
            </if>
        </trim>
        where id = #{id}
    </update>

    <!--****************** -->
    <select id="query" resultType="com.t2t.examples.model.User">
        SELECT * FROM USERS
        <where>
            <if test="name!=null and name!='' ">
                NAME = #{name}
            </if>
            <if test="sex!=null and sex!='' ">
                And sex = #{name}
            </if>
            <if test="age!= 0">
                AND AGE = #{age}
            </if>
        </where>
    </select>
    <select id="get" parameterType="int" resultType="com.t2t.examples.model.User">
        select * from users where id=#{id}
    </select>
    <select id="list" resultType="com.t2t.examples.model.User">
        SELECT * FROM USERS
    </select>
    <insert id="insert" parameterType="com.t2t.examples.model.User">
        INSERT INTO users(NAME, age) VALUES(#{name}, #{age})
    </insert>
    <!--****************** -->
</mapper>